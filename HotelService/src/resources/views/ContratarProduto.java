/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package resources.views;

import app.controllers.CompraProdutoController;
import app.controllers.HospedeController;
import app.controllers.ProdutoController;
import app.models.CategoriaProduto;
import app.models.CompraProduto;
import app.models.Hospede;
import app.models.Produtos;
import config.Carbon;
import config.Flash;
import config.Helper;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author leonardo
 */
public class ContratarProduto extends javax.swing.JDialog {

    private Produtos produtos;
    private CompraProduto compraProduto;
    private Hospede hospede;
    private CategoriaProduto categoriaProduto;

    private ProdutoController produtoController;
    private CompraProdutoController compraProdutoController;
    private HospedeController hospedeController;

    private ResultSet resultSet;
    private ResultSet dadosHospede;

    private final int[] categoria_produto_id;
    private final ArrayList<String[]> carrinhoDeCompras;

    /**
     * Creates new form Produ
     */
    public ContratarProduto(java.awt.Frame parent, boolean modal, ResultSet resultSet) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        this.dadosHospede = resultSet;

        this.produtos = new Produtos();
        this.compraProduto = new CompraProduto();
        this.hospede = new Hospede();
        this.categoriaProduto = new CategoriaProduto();
        this.carrinhoDeCompras = new ArrayList();

        this.categoria_produto_id = new int[this.categoriaProduto.count()];

        this.produtoController = new ProdutoController(this.produtos);
        this.compraProdutoController = new CompraProdutoController(this.compraProduto);
        this.hospedeController = new HospedeController(this.hospede);

        loadHospede();
        loadComboBoxCategoriaProdutos();
        loadTableCompraProdutos();
        controlInputs(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableProdutos = new javax.swing.JTable();
        tfCategoriaProduto = new javax.swing.JComboBox<>();
        tfPesquisa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        labelNameHospede = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableCompraProdutos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfPorcoes = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfObservacao = new javax.swing.JTextArea();
        btnDecrementa = new javax.swing.JLabel();
        btnIncrementa = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        TotalCompra = new javax.swing.JLabel();
        btnRemoveProduto = new javax.swing.JLabel();
        btnEditarCompraProduto = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        iconAddCarrinho = new javax.swing.JLabel();
        iconFinalizarCompra = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/banner-produto2.png"))); // NOI18N
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jPanel5.setBackground(new java.awt.Color(242, 243, 248));

        TableProdutos.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        TableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableProdutosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableProdutos);

        tfCategoriaProduto.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        tfCategoriaProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tfCategoriaProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tfCategoriaProdutoItemStateChanged(evt);
            }
        });
        tfCategoriaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfCategoriaProdutoMouseClicked(evt);
            }
        });

        tfPesquisa.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        tfPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfPesquisaMouseClicked(evt);
            }
        });
        tfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPesquisaKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hóspede:");

        labelNameHospede.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N

        TableCompraProdutos.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        TableCompraProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableCompraProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableCompraProdutosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TableCompraProdutos);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jPanel5, org.jdesktop.beansbinding.ELProperty.create("${background}"), jPanel2, org.jdesktop.beansbinding.BeanProperty.create("background"));
        bindingGroup.addBinding(binding);

        jLabel3.setText("Porções:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jLabel1, org.jdesktop.beansbinding.ELProperty.create("${font}"), jLabel3, org.jdesktop.beansbinding.BeanProperty.create("font"));
        bindingGroup.addBinding(binding);

        jLabel4.setText("Observação:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jLabel1, org.jdesktop.beansbinding.ELProperty.create("${font}"), jLabel4, org.jdesktop.beansbinding.BeanProperty.create("font"));
        bindingGroup.addBinding(binding);

        tfPorcoes.setEditable(false);
        tfPorcoes.setText("1");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tfPesquisa, org.jdesktop.beansbinding.ELProperty.create("${font}"), tfPorcoes, org.jdesktop.beansbinding.BeanProperty.create("font"));
        bindingGroup.addBinding(binding);

        tfObservacao.setColumns(20);
        tfObservacao.setRows(2);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tfPesquisa, org.jdesktop.beansbinding.ELProperty.create("${font}"), tfObservacao, org.jdesktop.beansbinding.BeanProperty.create("font"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(tfObservacao);

        btnDecrementa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/angle-down.png"))); // NOI18N
        btnDecrementa.setToolTipText("");
        btnDecrementa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDecrementa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDecrementaMouseClicked(evt);
            }
        });

        btnIncrementa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/angle-up.png"))); // NOI18N
        btnIncrementa.setToolTipText("");
        btnIncrementa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIncrementa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIncrementaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPorcoes, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(btnDecrementa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIncrementa))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDecrementa, btnIncrementa});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnIncrementa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfPorcoes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(btnDecrementa)))
                .addGap(17, 17, 17)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDecrementa, btnIncrementa});

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jPanel5, org.jdesktop.beansbinding.ELProperty.create("${background}"), jPanel3, org.jdesktop.beansbinding.BeanProperty.create("background"));
        bindingGroup.addBinding(binding);

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(123, 126, 138));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("TOTAL DOS PRODUTOS:");

        TotalCompra.setFont(new java.awt.Font("Poppins", 0, 30)); // NOI18N
        TotalCompra.setForeground(new java.awt.Color(119, 54, 228));
        TotalCompra.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalCompra.setText("R$ 0");

        btnRemoveProduto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRemoveProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/btn-remover-produto.png"))); // NOI18N
        btnRemoveProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveProdutoMouseClicked(evt);
            }
        });

        btnEditarCompraProduto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditarCompraProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/btn-editar-compra-produto.png"))); // NOI18N
        btnEditarCompraProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarCompraProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarCompraProdutoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TotalCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEditarCompraProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoveProduto)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TotalCompra)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveProduto)
                    .addComponent(btnEditarCompraProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEditarCompraProduto, btnRemoveProduto});

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jPanel5, org.jdesktop.beansbinding.ELProperty.create("${background}"), jPanel4, org.jdesktop.beansbinding.BeanProperty.create("background"));
        bindingGroup.addBinding(binding);

        iconAddCarrinho.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        iconAddCarrinho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconAddCarrinho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/icon-cart.png"))); // NOI18N
        iconAddCarrinho.setText("Adicionar ao Carrinho");
        iconAddCarrinho.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconAddCarrinho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconAddCarrinhoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconAddCarrinhoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconAddCarrinhoMouseEntered(evt);
            }
        });

        iconFinalizarCompra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconFinalizarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/icon-money.png"))); // NOI18N
        iconFinalizarCompra.setText("Finalizar Compra");
        iconFinalizarCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, iconAddCarrinho, org.jdesktop.beansbinding.ELProperty.create("${font}"), iconFinalizarCompra, org.jdesktop.beansbinding.BeanProperty.create("font"));
        bindingGroup.addBinding(binding);

        iconFinalizarCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconFinalizarCompraMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconFinalizarCompraMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconFinalizarCompraMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(iconAddCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconFinalizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iconAddCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconFinalizarCompra))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelNameHospede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(tfCategoriaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfPesquisa))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelNameHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCategoriaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 1169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iconAddCarrinhoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAddCarrinhoMouseEntered
        Helper.hoverImage(this.iconAddCarrinho, "/resources/images/png/icon-cart-hover.png", this.getClass());
    }//GEN-LAST:event_iconAddCarrinhoMouseEntered

    private void iconAddCarrinhoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAddCarrinhoMouseExited
        Helper.hoverImage(this.iconAddCarrinho, "/resources/images/png/icon-cart.png", this.getClass());
    }//GEN-LAST:event_iconAddCarrinhoMouseExited

    private void iconAddCarrinhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAddCarrinhoMouseClicked
        addProdutoAoCarrinho();
    }//GEN-LAST:event_iconAddCarrinhoMouseClicked

    private void iconFinalizarCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconFinalizarCompraMouseClicked
        if (this.carrinhoDeCompras.size() > 0) {
            finishPurchaseProduct();
        } else {
            Flash.warning("Nenhum produto foi selecionado para a compra.");
        }
    }//GEN-LAST:event_iconFinalizarCompraMouseClicked

    private void iconFinalizarCompraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconFinalizarCompraMouseEntered
        Helper.hoverImage(this.iconFinalizarCompra, "/resources/images/png/icon-money-hover.png", this.getClass());
    }//GEN-LAST:event_iconFinalizarCompraMouseEntered

    private void iconFinalizarCompraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconFinalizarCompraMouseExited
        Helper.hoverImage(this.iconFinalizarCompra, "/resources/images/png/icon-money.png", this.getClass());
    }//GEN-LAST:event_iconFinalizarCompraMouseExited

    private void tfCategoriaProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tfCategoriaProdutoItemStateChanged
        if (tfCategoriaProduto.getSelectedIndex() > 0) {
            try {
                int idSelecionado = this.categoria_produto_id[tfCategoriaProduto.getSelectedIndex() - 1];
                this.resultSet = this.produtos.equals("categoria_produto_id", idSelecionado, null);
                loadTableProdutos(this.resultSet);
            } catch (Exception ex) {
                System.out.println("Erro na função tfCategoriaProdutoItemStateChanged(): " + ex);
            }
        } else {
            loadTableProdutos(this.produtoController.index());
        }
    }//GEN-LAST:event_tfCategoriaProdutoItemStateChanged

    private void tfPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesquisaKeyReleased
        try {
            if (!tfPesquisa.getText().trim().equals("")) {
                if (tfCategoriaProduto.getSelectedIndex() > 0) {
                    int idSelecionado = this.categoria_produto_id[tfCategoriaProduto.getSelectedIndex() - 1];
                    Object[] keys = new Object[]{"ativo = 1", "categoria_produto_id = " + idSelecionado};
                    loadTableProdutos(this.produtos.like("titulo", tfPesquisa.getText().trim().toUpperCase(), keys));

                } else {
                    loadTableProdutos(this.produtos.like("titulo", tfPesquisa.getText().trim().toUpperCase(), null));

                }
            } else {
                loadTableProdutos(null);
            }
        } catch (Exception ex) {
            System.out.println("Erro na função tfPesquisaKeyReleased(): " + ex);
        }
    }//GEN-LAST:event_tfPesquisaKeyReleased

    private void btnRemoveProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveProdutoMouseClicked
        int linha = TableCompraProdutos.getSelectedRow();
        if (linha > 0) {
            int id = Integer.valueOf(TableCompraProdutos.getValueAt(linha, 0).toString());
            this.carrinhoDeCompras.remove(id);
            loadTableCompraProdutos();
            cleanInputs();
            controlInputs(false);
            calcularTotalCompra();
        } else {
            Flash.error("Selecione um produto do carrinho.");
        }
    }//GEN-LAST:event_btnRemoveProdutoMouseClicked

    private void TableCompraProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableCompraProdutosMouseClicked
        int linha = TableCompraProdutos.getSelectedRow();
        if (linha > 0) {
            controlInputs(true);
            int compra_produto_id = Integer.valueOf(TableCompraProdutos.getValueAt(linha, 0).toString());
            tfPorcoes.setText(this.carrinhoDeCompras.get(compra_produto_id)[3]);
            tfObservacao.setText(this.carrinhoDeCompras.get(compra_produto_id)[4]);
        } else {
            Flash.error("Selecione um produto do carrinho.");
        }
    }//GEN-LAST:event_TableCompraProdutosMouseClicked

    private void btnEditarCompraProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarCompraProdutoMouseClicked
        updateProdutoCarrinho();
    }//GEN-LAST:event_btnEditarCompraProdutoMouseClicked

    private void tfCategoriaProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfCategoriaProdutoMouseClicked
        controlInputs(false);
    }//GEN-LAST:event_tfCategoriaProdutoMouseClicked

    private void tfPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfPesquisaMouseClicked
        controlInputs(false);
    }//GEN-LAST:event_tfPesquisaMouseClicked

    private void TableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableProdutosMouseClicked
        controlInputs(false);
    }//GEN-LAST:event_TableProdutosMouseClicked

    private void btnIncrementaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIncrementaMouseClicked
        tfPorcoes.setText(String.valueOf(Helper.increment(Integer.valueOf(String.valueOf(tfPorcoes.getText())))));
    }//GEN-LAST:event_btnIncrementaMouseClicked

    private void btnDecrementaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecrementaMouseClicked
        int value = Helper.decrement(Integer.valueOf(String.valueOf(tfPorcoes.getText())));
        if (value > 0) {
            tfPorcoes.setText(String.valueOf(value));
        }else{
            Flash.error("Valor não pode ficar nulo.");
        }
    }//GEN-LAST:event_btnDecrementaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableCompraProdutos;
    private javax.swing.JTable TableProdutos;
    private javax.swing.JLabel TotalCompra;
    private javax.swing.JLabel btnDecrementa;
    private javax.swing.JLabel btnEditarCompraProduto;
    private javax.swing.JLabel btnIncrementa;
    private javax.swing.JLabel btnRemoveProduto;
    private javax.swing.JLabel iconAddCarrinho;
    private javax.swing.JLabel iconFinalizarCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelNameHospede;
    private javax.swing.JComboBox<String> tfCategoriaProduto;
    private javax.swing.JTextArea tfObservacao;
    private javax.swing.JTextField tfPesquisa;
    private javax.swing.JTextField tfPorcoes;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void cleanInputs() {
        tfPorcoes.setText("1");
        tfObservacao.setText("");
    }

    private void controlInputs(boolean status) {
        btnRemoveProduto.setVisible(status);
        btnEditarCompraProduto.setVisible(status);
        cleanInputs();
    }

    private void loadHospede() {
        try {
            labelNameHospede.setText(this.dadosHospede.getString("nome"));
        } catch (SQLException ex) {
            Flash.error("Houve um problema ao carregar os dados do hospede.");
            this.dispose();
        }
    }

    private void loadTableProdutos(ResultSet rs) {
        try {
            DefaultTableModel modelo = new DefaultTableModel(new Object[]{"ID", "Produto", "Preço"}, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            if (rs != null) {
                while (rs.next()) {
                    modelo.addRow(new Object[]{
                        rs.getInt("id"),
                        rs.getString("titulo"),
                        rs.getString("preco")
                    });
                }
            }

            TableProdutos.setModel(modelo);

            TableProdutos.getColumnModel().getColumn(0).setPreferredWidth(1);
            TableProdutos.getColumnModel().getColumn(1).setPreferredWidth(250);
            TableProdutos.getColumnModel().getColumn(2).setPreferredWidth(1);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void loadTableCompraProdutos() {
        DefaultTableModel modelo = new DefaultTableModel(new Object[]{"ID", "Produto", "Porções", "Valor Unit.", "Valor"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        if (!this.carrinhoDeCompras.isEmpty()) {
            for (int i = 0; i < this.carrinhoDeCompras.size(); i++) {
                modelo.addRow(new Object[]{
                    i,
                    this.carrinhoDeCompras.get(i)[5],
                    this.carrinhoDeCompras.get(i)[3],
                    this.carrinhoDeCompras.get(i)[6],
                    this.carrinhoDeCompras.get(i)[7]
                });
            }
        }

        TableCompraProdutos.setModel(modelo);

        TableCompraProdutos.getColumnModel().getColumn(0).setPreferredWidth(1);
        TableCompraProdutos.getColumnModel().getColumn(1).setPreferredWidth(250);
        TableCompraProdutos.getColumnModel().getColumn(2).setPreferredWidth(1);
        TableCompraProdutos.getColumnModel().getColumn(3).setPreferredWidth(1);
        TableCompraProdutos.getColumnModel().getColumn(3).setPreferredWidth(1);
    }

    private void loadComboBoxCategoriaProdutos() {
        int cont = 0;
        tfCategoriaProduto.removeAllItems();
        try {
            this.resultSet = this.categoriaProduto.hasManyCategoriaProduto();
            tfCategoriaProduto.addItem("Selecione um item");
            tfCategoriaProduto.setSelectedIndex(0);
            if (this.resultSet != null) {
                while (this.resultSet.next()) {
                    tfCategoriaProduto.addItem(this.resultSet.getString("nome"));
                    this.categoria_produto_id[cont] = this.resultSet.getInt("id");
                    cont++;
                }
            }

        } catch (SQLException ex) {
            System.out.println("Erro na função loadComboBox: " + ex);
        }
    }

    private void addProdutoAoCarrinho() {
        if (isValidFormCompraProduto()) {
            try {
                int id_produto = Integer.valueOf(TableProdutos.getValueAt(TableProdutos.getSelectedRow(), 0).toString());
                this.resultSet = this.produtos.find(id_produto);

                if (this.resultSet != null && this.resultSet.next()) {
                    
                    double porcoes = Double.valueOf( String.valueOf(tfPorcoes.getText()) ); 
                    double preco_unitario = this.resultSet.getDouble("preco");
                    double preco = this.resultSet.getDouble("preco") * porcoes;
                    
                    this.carrinhoDeCompras.add(new String[]{
                        String.valueOf(this.dadosHospede.getInt("id")),
                        String.valueOf(id_produto),
                        Carbon.getDate(Carbon.now(), "yyyy-MM-dd HH:mm:ss"),
                        String.valueOf(tfPorcoes.getText()),
                        String.valueOf(tfObservacao.getText().trim()),
                        this.resultSet.getString("titulo"),
                        String.valueOf(preco_unitario),
                        String.valueOf(preco),
                    });
                    
                    loadTableCompraProdutos();
                    calcularTotalCompra();
                    cleanInputs();
                }
            } catch (Exception ex) {
                System.out.println("Erro na função addProdutoAoCarrinho(): " + ex);
            }

        }
    }

    private void updateProdutoCarrinho() {
        if (isValidFormCompraProduto()) {
            
            int compra_produto_id = Integer.valueOf(TableCompraProdutos.getValueAt(TableCompraProdutos.getSelectedRow(), 0).toString());
            
            this.carrinhoDeCompras.get(compra_produto_id)[2] = Carbon.getDate(Carbon.now(), "yyyy-MM-dd HH:mm:ss");
            this.carrinhoDeCompras.get(compra_produto_id)[3] = String.valueOf(tfPorcoes.getText().trim());
            this.carrinhoDeCompras.get(compra_produto_id)[4] = String.valueOf(tfObservacao.getText().trim());
            
            double porcoes = Double.valueOf( String.valueOf(tfPorcoes.getText()) ); 
            double preco_unitario = Double.valueOf(this.carrinhoDeCompras.get(compra_produto_id)[6]);
            this.carrinhoDeCompras.get(compra_produto_id)[7] = String.valueOf(preco_unitario * porcoes);
            
            Flash.success("Compra modificada.");
            controlInputs(false);
            loadTableCompraProdutos();
            calcularTotalCompra();
        }
    }

    private boolean isValidFormCompraProduto() {
        return this.compraProduto.setPorcao(tfPorcoes.getText()) 
                && this.compraProduto.setProduto(TableProdutos.getSelectedRow());
    }

    private void calcularTotalCompra() {
        double totalCompra = 0.0;
        if( this.carrinhoDeCompras.size() > 0 ){
            for (int i = 0; i < this.carrinhoDeCompras.size(); i++) {
                totalCompra += Double.valueOf(this.carrinhoDeCompras.get(i)[7]);
            }
        }
        TotalCompra.setText(Helper.formatPrice(totalCompra));
    }

    private void finishPurchaseProduct() {
        for (int i = 0; i < this.carrinhoDeCompras.size(); i++) {
            this.compraProdutoController.store(new Object[]{
                this.carrinhoDeCompras.get(i)[0],
                this.carrinhoDeCompras.get(i)[1],
                this.carrinhoDeCompras.get(i)[2],
                this.carrinhoDeCompras.get(i)[3],
                this.carrinhoDeCompras.get(i)[4],
                "S"
            });
        }
        
        Flash.success("Produtos foram adicionados na conta do hóspede!");
        
        if( Flash.confirm("Deseja comprar mais produtos?", "info") == 0 ){
            this.carrinhoDeCompras.clear();
            loadTableCompraProdutos();
            calcularTotalCompra();
            Flash.info("O carrinho de compras está vazio.");
        }else{
            this.dispose();
        }
    }

}
