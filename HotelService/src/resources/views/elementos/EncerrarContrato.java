/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package resources.views.elementos;

import app.controllers.HospedeController;
import app.models.Servicos;
import config.App;
import config.Carbon;
import config.Flash;
import config.Helper;
import config.PDF;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTabbedPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.StyledDocument;

/**
 *
 * @author leonardo
 */
public class EncerrarContrato extends javax.swing.JPanel {

    private int idHospedeSelecionado;

    private JTabbedPane tabbedPane;

    private ResultSet resultSet;
    private ResultSet sessaoHospede;

    private app.models.Hospede hospede;
    private Servicos servicos;

    private HospedeController hospedeController;

    /**
     * Creates new form EncerrarContrato
     */
    public EncerrarContrato(int id, JTabbedPane jp) {
        try {
            initComponents();
            this.idHospedeSelecionado = id;
            this.tabbedPane = jp;

            this.hospede = new app.models.Hospede();
            this.servicos = new Servicos();

            this.hospedeController = new HospedeController(this.hospede);

            this.sessaoHospede = this.hospede.find(this.idHospedeSelecionado);

            loadPanelCancelado();
            calcularServicoProdutos();
            if(getTarifacao()!=1.0){
                InfoTarifacao.setVisible(true);
            }else{
                InfoTarifacao.setVisible(false);
            }
            
        } catch (Exception ex) {
            System.out.println("Erro no construtor HospedeServicos(): " + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoCancelamento = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        TotalValorProdutos = new javax.swing.JLabel();
        TotalValorContrato = new javax.swing.JLabel();
        TotalValorServicos = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TotalValorProdutos1 = new javax.swing.JLabel();
        InfoTarifacao = new javax.swing.JLabel();
        btnEncerrarContrato = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));

        btnVoltar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/botoes/fechar.png"))); // NOI18N
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVoltarMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Poppins", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Encerrar Contrato do Hóspede");

        infoCancelamento.setEditable(false);
        infoCancelamento.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(infoCancelamento);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        jSeparator1.setBackground(new java.awt.Color(10, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(1, 1, 1));

        TotalValorProdutos.setFont(new java.awt.Font("Poppins", 0, 24)); // NOI18N
        TotalValorProdutos.setForeground(new java.awt.Color(1, 1, 1));
        TotalValorProdutos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalValorProdutos.setText("R$ 0.00");

        TotalValorContrato.setFont(new java.awt.Font("Poppins", 0, 36)); // NOI18N
        TotalValorContrato.setForeground(new java.awt.Color(84, 143, 2));
        TotalValorContrato.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalValorContrato.setText("R$ 0.00");

        TotalValorServicos.setFont(new java.awt.Font("Poppins", 0, 24)); // NOI18N
        TotalValorServicos.setForeground(new java.awt.Color(1, 1, 1));
        TotalValorServicos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalValorServicos.setText("R$ 0.00");

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(111, 111, 111));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("TOTAL DOS SERVIÇOS");

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(111, 111, 111));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("TOTAL DOS PRODUTOS");

        TotalValorProdutos1.setFont(new java.awt.Font("Poppins", 0, 24)); // NOI18N
        TotalValorProdutos1.setForeground(new java.awt.Color(1, 1, 1));
        TotalValorProdutos1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalValorProdutos1.setText("+");

        InfoTarifacao.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        InfoTarifacao.setForeground(new java.awt.Color(111, 111, 111));
        InfoTarifacao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        InfoTarifacao.setText("CALCULANDO VALOR COM BASE NA TARIFAÇÃO*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(TotalValorProdutos1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TotalValorServicos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                            .addComponent(TotalValorProdutos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InfoTarifacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(TotalValorContrato, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(InfoTarifacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TotalValorServicos)
                .addGap(1, 1, 1)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalValorProdutos)
                    .addComponent(TotalValorProdutos1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(179, Short.MAX_VALUE)
                    .addComponent(TotalValorContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)))
        );

        btnEncerrarContrato.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEncerrarContrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/botoes/encerrar-contrato.png"))); // NOI18N
        btnEncerrarContrato.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEncerrarContrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEncerrarContratoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                .addGap(93, 93, 93))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnEncerrarContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVoltar)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 83, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEncerrarContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarMouseClicked
        closeJPanel();
    }//GEN-LAST:event_btnVoltarMouseClicked

    private void btnEncerrarContratoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEncerrarContratoMouseClicked
        gerarCartaCancelamento();
    }//GEN-LAST:event_btnEncerrarContratoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InfoTarifacao;
    private javax.swing.JLabel TotalValorContrato;
    private javax.swing.JLabel TotalValorProdutos;
    private javax.swing.JLabel TotalValorProdutos1;
    private javax.swing.JLabel TotalValorServicos;
    private javax.swing.JLabel btnEncerrarContrato;
    private javax.swing.JLabel btnVoltar;
    private javax.swing.JTextPane infoCancelamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private void closeJPanel() {
        this.tabbedPane.setSelectedIndex(1);
        this.tabbedPane.removeTabAt(this.tabbedPane.getTabCount() - 1);
    }

    private void loadPanelCancelado() {
        try {
            if (this.sessaoHospede.next()) {
                infoCancelamento.setText("");
                StyledDocument doc = infoCancelamento.getStyledDocument();
                doc.insertString(0,
                        "SOLICITAÇÃO DE CANCELAMENTO\n"
                        + App.nomeHotel + "\n\n"
                        + this.sessaoHospede.getString("nome") + ", incrito no CPF sob o nº (" + this.sessaoHospede.getString("cpf") + ")"
                        + ", residente e dominiciliado(a) à (" + this.sessaoHospede.getString("logradouro") + ")"
                        + ", venho através desta solicitar o cancelamento do Contrato dos serviços adquiridos e"
                        + "fornecidos pelo hotel(" + App.nomeHotel + "), até a presente data, "
                        + "de modo que quaisquer faturamentos e cobranças deverão ser interrompidas desde já.\n\n"
                        + "Certos da boa acolhida desta solicitação, solicito confirmação do cancelamento requisitado.\n\n"
                        + "Campina Grande, " + Carbon.getLongDate(null) + "\n"
                        + App.nomeHotel,
                        null);
            }
        } catch (BadLocationException | SQLException ex) {
            System.out.println("Erro na função loadPanelCancelado(), em EncerrarContrato()" + ex);
        }
    }

    private void calcularServicoProdutos() {
        try {

            // Somar os Serviços
            double totalCompraServicos = 0.0;
            String sql = "SELECT servicos.preco FROM compra_servico "
                    + "INNER JOIN servicos ON compra_servico.servicos_id = servicos.id "
                    + "WHERE compra_servico.hospede_id = " + this.idHospedeSelecionado + " AND compra_servico.ativo = 'S'";
            this.resultSet = this.hospede.select(sql);
            while (this.resultSet.next()) {
                totalCompraServicos += this.resultSet.getDouble("preco");
            }
            TotalValorServicos.setText(Helper.formatPrice(totalCompraServicos));

            // Somar os Produtos
            double totalCompraProdutos = 0.0, preco_unitario = 0.0;
            int porcoes = 0;
            sql = "SELECT compra_produto.porcoes, produto.preco "
                    + "FROM compra_produto "
                    + "INNER JOIN produto ON compra_produto.produto_id = produto.id "
                    + "WHERE compra_produto.hospede_id = " + this.idHospedeSelecionado + " AND compra_produto.ativo = 'S'";
            this.resultSet = this.hospede.select(sql);
            while (this.resultSet.next()) {
                porcoes = this.resultSet.getInt("porcoes");
                preco_unitario = this.resultSet.getDouble("preco");
                totalCompraProdutos = totalCompraProdutos + (preco_unitario * porcoes);
            }
            TotalValorProdutos.setText(Helper.formatPrice(totalCompraProdutos));

            double valorTotal = ( totalCompraServicos + totalCompraProdutos ) * getTarifacao();
            TotalValorContrato.setText(Helper.formatPrice(valorTotal));

        } catch (Exception ex) {
            System.out.println("Erro na função calcularServicoProdutos(), em EncerrarContrato: " + ex);
        }
    }

    private void gerarCartaCancelamento() {
        try {
            String fontSizeTitle = "font-size: 18px";
            String fontSize = "font-size: 10px";

            // if( this.sessaoHospede.next() ){
            String html
                    = "<h1 style=\"text-align: center;+" + fontSizeTitle + "+ \">" + App.nomeHotel + "</h1><br><br>"
                    + "<table align=\"100%\">"
                    + "<tbody>"
                    + "<tr>"
                    + "<td style=\"font-size:18px;\"><h5><strong>" + this.sessaoHospede.getString("nome") + "</strong></h5></td>"
                    + "</tr>"
                    + "<tr>"
                    + "<td style=\"" + fontSize + "\">"
                    + this.sessaoHospede.getString("email").toLowerCase() + " - " + this.sessaoHospede.getString("cpf")
                    + "</td>"
                    + "</tr>"
                    + "</tbody>"
                    + "</table><br><br>";

            // ---------------------[ LISTAR SERVIÇOS ]---------------------
            String sql = "SELECT servicos.preco, compra_servico.data_compra, servicos.nome "
                    + "FROM compra_servico "
                    + "INNER JOIN servicos ON compra_servico.servicos_id = servicos.id "
                    + "WHERE compra_servico.hospede_id = " + this.idHospedeSelecionado;
            this.resultSet = this.hospede.select(sql);

            html = html.concat(
                    "<h5 style=\"font-family: Poppins; color: rgb(0, 0, 0); " + fontSizeTitle + "\">Serviços:</h5>\n"
                    + "<table align=\"100%\" style=\"border: 1px solid #d4d4d4; " + fontSize + "; width: 100%;\">"
                    + "<tbody>");

            while (this.resultSet.next()) {
                html = html.concat(
                        "<tr style=\"" + fontSize + "\">"
                        + "<td style=\"" + fontSize + "; width:80%;\">" + this.resultSet.getString("nome") + "</td>"
                        + "<td style=\"" + fontSize + "; width:10%;\">"
                        + Carbon.getDate(this.resultSet.getDate("data_compra"), "dd/MM/yyyy")
                        + "</td>"
                        + "<td style=\"" + fontSize + "; width:10%;\">" + Helper.formatPrice(this.resultSet.getDouble("preco")) + "</td>"
                        + "</tr>"
                );
            }

            html = html.concat(
                    "</tbody>"
                    + "</table><br><br>");
            // ---------------------[ // LISTAR SERVIÇOS ]---------------------

            // ---------------------[ LISTAR PRODUTOS ]---------------------
            html = html.concat(
                    "<h5 style=\"font-family: Poppins; color: rgb(0, 0, 0); " + fontSizeTitle + ";\">Produtos:</h5>\n"
                    + "<table align=\"100%\" style=\"border: 1px solid #d4d4d4; " + fontSize + "; width: 100%;\">"
                    + "<tbody>");

            sql = "SELECT produto.preco, compra_produto.data_compra, produto.titulo, compra_produto.porcoes "
                    + "FROM compra_produto "
                    + "INNER JOIN produto ON compra_produto.produto_id = produto.id "
                    + "WHERE compra_produto.hospede_id = " + this.idHospedeSelecionado;
            this.resultSet = this.hospede.select(sql);

            while (this.resultSet.next()) {
                html = html.concat(
                        "<tr style=\"" + fontSize + "\""
                        + "<td style=\"" + fontSize + "; width:70%;\">" + this.resultSet.getString("titulo") + "</td>"
                        + "<td style=\"" + fontSize + "; width:10%;\">"
                        + Carbon.getDate(this.resultSet.getDate("data_compra"), "dd/MM/yyyy")
                        + "</td>"
                        + "<td style=\"" + fontSize + "; width:10%;\">" + this.resultSet.getString("porcoes") + "</td>"
                        + "<td style=\"" + fontSize + "; width:10%;\">" + Helper.formatPrice(this.resultSet.getDouble("preco")) + "</td>"
                        + "</tr>"
                );
            }

            html = html.concat(
                    "</tbody>"
                    + "</table><br><br>");
            // ---------------------[ // LISTAR PRODUTOS ]---------------------

            html = html.concat(
                    "<p style=\"text-align: justify; " + fontSize + "\">"
                    + this.sessaoHospede.getString("nome") + ", incrito no CPF sob o nº (" + this.sessaoHospede.getString("cpf") + "), "
                    + "residente e dominiciliado(a) à (" + this.sessaoHospede.getString("logradouro") + "), venho através desta solicitar "
                    + "o cancelamento do Contrato dos serviços adquiridos e fornecidos pelo hotel(" + App.nomeHotel + "), até a presente "
                    + "data, de modo que quaisquer faturamentos e cobranças deverão ser interrompidas desde já."
                    + "</p><br>"
                    + "<p style=\"text-align: justify; " + fontSize + "\">"
                    + "Certos da boa acolhida desta solicitação, solicito confirmação do cancelamento requisitado."
                    + "</p><br>"
                    + "<p style=\"text-align: center; " + fontSize + "\">Campina Grande, " + Carbon.getLongDate(null) + "</p>"
            );

            if (PDF.create(html)) {
                // fechar contrato
                Flash.success("Documento salvo.");
                Flash.success("O checkout será iniciado.");
                encerrarContrato();
                closeJPanel();
                this.tabbedPane.setSelectedIndex(0);

            } else {
                Flash.error("Documento não foi criado.");
            }

        } catch (SQLException ex) {
            System.out.println("Erro na função gerarCartaCancelamento(): " + ex);
        } catch (Exception ex) {
            System.out.println("Erro na função gerarCartaCancelamento(): " + ex);
        }
    }

    private void encerrarContrato() {
        try {
            this.hospede.update(new Object[]{
                this.sessaoHospede.getString("nome"),
                this.sessaoHospede.getString("email"),
                this.sessaoHospede.getString("cpf"),
                this.sessaoHospede.getString("nascimento"),
                this.sessaoHospede.getString("cep"),
                this.sessaoHospede.getString("logradouro"),
                this.sessaoHospede.getString("numero"),
                this.sessaoHospede.getString("complemento"),
                this.sessaoHospede.getString("bairro"),
                this.sessaoHospede.getString("cidade"),
                this.sessaoHospede.getString("estado"),
                this.sessaoHospede.getString("telefone"),
                this.sessaoHospede.getString("celular"),
                this.sessaoHospede.getString("data_inicial"),
                Carbon.dateToDB(Helper.explode("/", Carbon.getDate(null))),
                this.sessaoHospede.getString("tipo_cartao"),
                this.sessaoHospede.getString("cartao_credito"),
                this.sessaoHospede.getString("data_vencimento"),
                this.sessaoHospede.getString("codigo_seguranca"),
                "F"
            }, this.idHospedeSelecionado);

            String sql = "SELECT servicos.id FROM compra_servico "
                    + "INNER JOIN servicos ON compra_servico.servicos_id = servicos.id "
                    + "WHERE compra_servico.hospede_id = " + this.idHospedeSelecionado;
            this.resultSet = this.hospede.select(sql);

            while (this.resultSet.next()) {
                this.servicos.reporVaga(this.resultSet.getInt("id"));
            }

            Flash.success("Checkout realizado.");

        } catch (SQLException ex) {
            System.out.println("Erro na função encerrarContrato() " + ex);
        } catch (Exception ex) {
            System.out.println("Erro na função encerrarContrato() " + ex);
        }
    }

    // ---------------------[ TARIFAÇÃO ]---------------------
    private double getTarifacao() {
        try {
            String sql = "SELECT * FROM sistema WHERE id = 1";
            this.resultSet = this.hospede.select(sql);
            if (this.resultSet.next()) {
                if( this.resultSet.getInt("tarifacao") == 1 ){
                    return this.resultSet.getDouble("valor_tarifacao")+1.0;
                }
            }
            return 1.0;
        } catch (Exception ex) {
            System.out.println("Erro na função getTarifacao() " + ex);
        }
        return 1.0;
    }

}
