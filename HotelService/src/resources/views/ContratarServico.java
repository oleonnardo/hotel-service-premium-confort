/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package resources.views;

import app.controllers.CompraServicoController;
import app.controllers.HospedeController;
import app.controllers.ServicoController;
import app.models.TipoServico;
import app.models.CompraServico;
import app.models.Hospede;
import app.models.Servicos;
import config.Carbon;
import config.Flash;
import config.Helper;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author leonardo
 */
public class ContratarServico extends javax.swing.JDialog {

    private Servicos servicos;
    private CompraServico compraServico;
    private Hospede hospede;
    private TipoServico tipoServico;

    private ServicoController servicoController;
    private CompraServicoController compraServicoController;
    private HospedeController hospedeController;

    private ResultSet resultSet;
    private ResultSet dadosHospede;

    private final int[] categoria_servico_id;
    private ArrayList<String[]> carrinhoDeCompras;

    /**
     * Creates new form Produ
     */
    public ContratarServico(java.awt.Frame parent, boolean modal, ResultSet resultSet) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        this.dadosHospede = resultSet;

        this.servicos = new Servicos();
        this.compraServico = new CompraServico();
        this.hospede = new Hospede();
        this.tipoServico = new TipoServico();
        this.carrinhoDeCompras = new ArrayList();

        this.categoria_servico_id = new int[this.tipoServico.count()];

        this.servicoController = new ServicoController(this.servicos);
        this.compraServicoController = new CompraServicoController(this.compraServico);
        this.hospedeController = new HospedeController(this.hospede);
        
        loadHospede();
        loadComboBoxTipoServico();
        loadTableServicos(this.servicoController.index());
        loadTableCompraServico();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableServicos = new javax.swing.JTable();
        tfPesquisa = new javax.swing.JTextField();
        tfCategoriaServico = new javax.swing.JComboBox<>();
        tfQtdeCriancas = new javax.swing.JTextField();
        tfQtdePessoas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnDecrementa_QtdePessoas = new javax.swing.JLabel();
        btnIncrementa_QtdePessoas = new javax.swing.JLabel();
        btnDecrementa_QtdeCriancas = new javax.swing.JLabel();
        btnIncrementa_QtdeCriancas = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableCompraServicos = new javax.swing.JTable();
        iconFinalizarCompra = new javax.swing.JLabel();
        PanelHospede = new javax.swing.JPanel();
        labelNameHospede = new javax.swing.JLabel();
        labelNomeHospede = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBackground(new java.awt.Color(254, 254, 254));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/compra-servico.png"))); // NOI18N

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, PanelHospede, org.jdesktop.beansbinding.ELProperty.create("${background}"), jPanel1, org.jdesktop.beansbinding.BeanProperty.create("background"));
        bindingGroup.addBinding(binding);

        TableServicos.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        TableServicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableServicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableServicosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableServicos);

        tfPesquisa.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        tfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPesquisaKeyReleased(evt);
            }
        });

        tfCategoriaServico.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        tfCategoriaServico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tfCategoriaServico.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tfCategoriaServicoItemStateChanged(evt);
            }
        });
        tfCategoriaServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfCategoriaServicoMouseClicked(evt);
            }
        });

        tfQtdeCriancas.setEditable(false);
        tfQtdeCriancas.setText("0");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tfPesquisa, org.jdesktop.beansbinding.ELProperty.create("${font}"), tfQtdeCriancas, org.jdesktop.beansbinding.BeanProperty.create("font"));
        bindingGroup.addBinding(binding);

        tfQtdePessoas.setEditable(false);
        tfQtdePessoas.setText("0");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tfPesquisa, org.jdesktop.beansbinding.ELProperty.create("${font}"), tfQtdePessoas, org.jdesktop.beansbinding.BeanProperty.create("font"));
        bindingGroup.addBinding(binding);

        jLabel7.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        jLabel7.setText("Qtde de Pessoas:");

        jLabel8.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        jLabel8.setText("Qtde de Crian√ßas:");

        btnDecrementa_QtdePessoas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/angle-down.png"))); // NOI18N
        btnDecrementa_QtdePessoas.setToolTipText("");
        btnDecrementa_QtdePessoas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDecrementa_QtdePessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDecrementa_QtdePessoasMouseClicked(evt);
            }
        });

        btnIncrementa_QtdePessoas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/angle-up.png"))); // NOI18N
        btnIncrementa_QtdePessoas.setToolTipText("");
        btnIncrementa_QtdePessoas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIncrementa_QtdePessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIncrementa_QtdePessoasMouseClicked(evt);
            }
        });

        btnDecrementa_QtdeCriancas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/angle-down.png"))); // NOI18N
        btnDecrementa_QtdeCriancas.setToolTipText("");
        btnDecrementa_QtdeCriancas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDecrementa_QtdeCriancas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDecrementa_QtdeCriancasMouseClicked(evt);
            }
        });

        btnIncrementa_QtdeCriancas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/angle-up.png"))); // NOI18N
        btnIncrementa_QtdeCriancas.setToolTipText("");
        btnIncrementa_QtdeCriancas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIncrementa_QtdeCriancas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIncrementa_QtdeCriancasMouseClicked(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/botoes/add-servico-bg-gray.png"))); // NOI18N
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        TableCompraServicos.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        TableCompraServicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableCompraServicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableCompraServicosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TableCompraServicos);

        iconFinalizarCompra.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        iconFinalizarCompra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconFinalizarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/png/icon-money.png"))); // NOI18N
        iconFinalizarCompra.setText("Finalizar Compra");
        iconFinalizarCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconFinalizarCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconFinalizarCompraMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconFinalizarCompraMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconFinalizarCompraMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfCategoriaServico, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfPesquisa))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfQtdePessoas, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDecrementa_QtdePessoas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnIncrementa_QtdePessoas))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfQtdeCriancas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDecrementa_QtdeCriancas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnIncrementa_QtdeCriancas)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel3))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconFinalizarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfQtdeCriancas, tfQtdePessoas});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(iconFinalizarCompra)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCategoriaServico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfQtdePessoas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnIncrementa_QtdePessoas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(btnDecrementa_QtdePessoas)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfQtdeCriancas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnIncrementa_QtdeCriancas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(btnDecrementa_QtdeCriancas)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDecrementa_QtdeCriancas, btnIncrementa_QtdeCriancas, tfQtdeCriancas, tfQtdePessoas});

        jTabbedPane1.addTab("", jPanel1);

        PanelHospede.setBackground(new java.awt.Color(242, 243, 248));

        labelNameHospede.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N

        labelNomeHospede.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        labelNomeHospede.setForeground(new java.awt.Color(123, 126, 138));
        labelNomeHospede.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelNomeHospede.setText("H√ìSPEDE:");

        javax.swing.GroupLayout PanelHospedeLayout = new javax.swing.GroupLayout(PanelHospede);
        PanelHospede.setLayout(PanelHospedeLayout);
        PanelHospedeLayout.setHorizontalGroup(
            PanelHospedeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHospedeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelHospedeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNameHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNomeHospede))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelHospedeLayout.setVerticalGroup(
            PanelHospedeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHospedeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelNomeHospede)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNameHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(PanelHospede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelHospede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableServicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableServicosMouseClicked
       
    }//GEN-LAST:event_TableServicosMouseClicked

    private void tfPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesquisaKeyReleased
        try {
            if (!tfPesquisa.getText().trim().equals("")) {
                if (tfCategoriaServico.getSelectedIndex() > 0) {
                    int idSelecionado = this.categoria_servico_id[tfCategoriaServico.getSelectedIndex() - 1];
                    Object[] keys = new Object[]{"ativo = 1", "tipo_servico_id = " + idSelecionado};
                    loadTableServicos(this.servicos.like("nome", tfPesquisa.getText().trim().toUpperCase(), keys));

                } else {
                    loadTableServicos(this.servicos.like("nome", tfPesquisa.getText().trim().toUpperCase(), null));

                }
            } else {
                loadTableServicos(this.servicoController.index());
            }
        } catch (Exception ex) {
            System.out.println("Erro na fun√ß√£o tfPesquisaKeyReleased(): " + ex);
        }
    }//GEN-LAST:event_tfPesquisaKeyReleased

    private void tfCategoriaServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfCategoriaServicoMouseClicked
       
    }//GEN-LAST:event_tfCategoriaServicoMouseClicked

    private void btnDecrementa_QtdePessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecrementa_QtdePessoasMouseClicked
        inputNumberControl(tfQtdePessoas, "-");
    }//GEN-LAST:event_btnDecrementa_QtdePessoasMouseClicked

    private void btnIncrementa_QtdePessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIncrementa_QtdePessoasMouseClicked
        inputNumberControl(tfQtdePessoas, "+");
    }//GEN-LAST:event_btnIncrementa_QtdePessoasMouseClicked

    private void btnDecrementa_QtdeCriancasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecrementa_QtdeCriancasMouseClicked
        inputNumberControl(tfQtdeCriancas, "-");
    }//GEN-LAST:event_btnDecrementa_QtdeCriancasMouseClicked

    private void btnIncrementa_QtdeCriancasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIncrementa_QtdeCriancasMouseClicked
        inputNumberControl(tfQtdeCriancas, "+");
    }//GEN-LAST:event_btnIncrementa_QtdeCriancasMouseClicked

    private void tfCategoriaServicoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tfCategoriaServicoItemStateChanged
        if (tfCategoriaServico.getSelectedIndex() > 0) {
            try {
                int idSelecionado = this.categoria_servico_id[tfCategoriaServico.getSelectedIndex() - 1];
                this.resultSet = this.servicos.equals("tipo_servico_id", idSelecionado, null);
                loadTableServicos(this.resultSet);
            } catch (Exception ex) {
                System.out.println("Erro na fun√ß√£o tfCategoriaServicoItemStateChanged(): " + ex);
            }
        } else {
            loadTableServicos(this.servicoController.index());
        }
    }//GEN-LAST:event_tfCategoriaServicoItemStateChanged

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        if(TableServicos.getSelectedRow() > 0){
            this.carrinhoDeCompras = this.servicos.validarCompra(this.carrinhoDeCompras, requestInputsCarrinho());
            loadTableCompraServico();
            loadTableServicos(this.servicoController.index());
        }else{
            Flash.error("Selecione um servi√ßo antes.");
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void TableCompraServicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableCompraServicosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TableCompraServicosMouseClicked

    private void iconFinalizarCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconFinalizarCompraMouseClicked
        if (this.carrinhoDeCompras.size() > 0) {
            finishPurchaseService();
        } else {
            Flash.warning("Nenhum produto foi selecionado para a compra.");
        }
    }//GEN-LAST:event_iconFinalizarCompraMouseClicked

    private void iconFinalizarCompraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconFinalizarCompraMouseExited
        Helper.hoverImage(this.iconFinalizarCompra, "/resources/images/png/icon-money.png", this.getClass());
    }//GEN-LAST:event_iconFinalizarCompraMouseExited

    private void iconFinalizarCompraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconFinalizarCompraMouseEntered
        Helper.hoverImage(this.iconFinalizarCompra, "/resources/images/png/icon-money-hover.png", this.getClass());
    }//GEN-LAST:event_iconFinalizarCompraMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelHospede;
    private javax.swing.JTable TableCompraServicos;
    private javax.swing.JTable TableServicos;
    private javax.swing.JLabel btnDecrementa_QtdeCriancas;
    private javax.swing.JLabel btnDecrementa_QtdePessoas;
    private javax.swing.JLabel btnIncrementa_QtdeCriancas;
    private javax.swing.JLabel btnIncrementa_QtdePessoas;
    private javax.swing.JLabel iconFinalizarCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelNameHospede;
    private javax.swing.JLabel labelNomeHospede;
    private javax.swing.JComboBox<String> tfCategoriaServico;
    private javax.swing.JTextField tfPesquisa;
    private javax.swing.JTextField tfQtdeCriancas;
    private javax.swing.JTextField tfQtdePessoas;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    
    private Object[] requestInputsCarrinho(){
        try {
            return new Object[]{
                this.dadosHospede.getInt("id"),                                         // 0. hospede_id
                TableServicos.getValueAt(TableServicos.getSelectedRow(), 0).toString(), // 1. servicos_id
                tfQtdeCriancas.getText(),                                               // 2. qtde_criancas
                tfQtdePessoas.getText(),                                                // 3. qtde_pessoas
                "obs",                                                                  // 4. obs
                Carbon.getDate(Carbon.now(), "yyyy-MM-dd HH:mm:ss"),                    // 5. data_compra
                TableServicos.getValueAt(TableServicos.getSelectedRow(), 1).toString(), // 6. nome_servico
                TableServicos.getValueAt(TableServicos.getSelectedRow(), 3).toString(), // 7. vagas
                TableServicos.getValueAt(TableServicos.getSelectedRow(), 2).toString()  // 8. preco
            };
        } catch (SQLException ex) {
            System.out.println("Erro na fun√ß√£o requestInputsCarrinho():"+ ex);
        }
        return null;
    }
    
    private void inputNumberControl(javax.swing.JTextField field, String action){
        if(action.equals("+")){
            field.setText(String.valueOf(Helper.increment(Integer.valueOf(String.valueOf(field.getText())))));
        }else if(action.equals("-")){
            int value = Helper.decrement(Integer.valueOf(String.valueOf(field.getText())));
            if(value>=0)
                field.setText(String.valueOf(value));
            else
                Flash.error("Valor n√£o pode ser negativo.");  
        }
    }
    
    private void loadComboBoxTipoServico() {
        int cont = 0;
        tfCategoriaServico.removeAllItems();
        try {
            this.resultSet = this.tipoServico.hasManyTipoServico();
            tfCategoriaServico.addItem("Selecione um item");
            tfCategoriaServico.setSelectedIndex(0);
            if (this.resultSet != null) {
                while (this.resultSet.next()) {
                    tfCategoriaServico.addItem(this.resultSet.getString("nome"));
                    this.categoria_servico_id[cont] = this.resultSet.getInt("id");
                    cont++;
                }
            }

        } catch (SQLException ex) {
            System.out.println("Erro na fun√ß√£o loadComboBoxTipoServico: " + ex);
        }
    }
    
    private void loadHospede() {
        try {
            labelNameHospede.setText(this.dadosHospede.getString("nome"));
        } catch (SQLException ex) {
            Flash.error("Houve um problema ao carregar os dados do hospede.");
            this.dispose();
        }
    }
    
    private void loadTableServicos(ResultSet rs) {
        try {
            DefaultTableModel modelo = new DefaultTableModel(new Object[]{"ID", "Servi√ßo", "Pre√ßo", "Vagas"}, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            if (rs != null) {
                while (rs.next()) {
                    modelo.addRow(new Object[]{
                        rs.getInt("id"),
                        rs.getString("nome"),
                        rs.getString("preco"),
                        rs.getString("vagas")
                    });
                }
            }

            TableServicos.setModel(modelo);

            TableServicos.getColumnModel().getColumn(0).setPreferredWidth(1);
            TableServicos.getColumnModel().getColumn(1).setPreferredWidth(200);
            TableServicos.getColumnModel().getColumn(2).setPreferredWidth(50);
            TableServicos.getColumnModel().getColumn(3).setPreferredWidth(50);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }
    
    private void loadTableCompraServico() {
        DefaultTableModel modelo = new DefaultTableModel(new Object[]{"ID", "Servi√ßo", "Valor"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        if (!this.carrinhoDeCompras.isEmpty()) {

            for (int i = 0; i < this.carrinhoDeCompras.size(); i++) {
                modelo.addRow(new Object[]{
                    i,
                    this.carrinhoDeCompras.get(i)[6],
                    this.carrinhoDeCompras.get(i)[8],
                });
            }
        }

        TableCompraServicos.setModel(modelo);
        TableCompraServicos.getColumnModel().getColumn(0).setPreferredWidth(1);
        TableCompraServicos.getColumnModel().getColumn(1).setPreferredWidth(250);
        TableCompraServicos.getColumnModel().getColumn(2).setPreferredWidth(1);
    }

    private void finishPurchaseService() {
        for (int i = 0; i < this.carrinhoDeCompras.size(); i++) {
            //  hospede_id, servicos_id, qtde_criancas, qtde_pessoas, obs, data_compra, ativo
            this.compraServicoController.store(new Object[]{
                this.carrinhoDeCompras.get(i)[0],
                this.carrinhoDeCompras.get(i)[1],
                this.carrinhoDeCompras.get(i)[2],
                this.carrinhoDeCompras.get(i)[3],
                this.carrinhoDeCompras.get(i)[5],
                this.carrinhoDeCompras.get(i)[4],
                "S"
            });
        }
        
        Flash.success("Servi√ßos foram adicionados na conta do h√≥spede!");
        
        if( Flash.confirm("Deseja comprar mais produtos?", "info") == 0 ){
            this.carrinhoDeCompras.clear();
            loadTableCompraServico();
            calcularTotalCompra();
            Flash.info("O carrinho de compras est√° vazio.");
        }else{
            this.dispose();
        }
        
    }
    
    private void calcularTotalCompra() {
        double totalCompra = 0.0;
        if( this.carrinhoDeCompras.size() > 0 ){
            for (int i = 0; i < this.carrinhoDeCompras.size(); i++) {
                totalCompra += Double.valueOf(this.carrinhoDeCompras.get(i)[7]);
            }
        }
    }

}
